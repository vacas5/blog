{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","lodash_get__WEBPACK_IMPORTED_MODULE_2__","lodash_get__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","prop_types__WEBPACK_IMPORTED_MODULE_4__","prop_types__WEBPACK_IMPORTED_MODULE_4___default","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","BlogIndex","_ref","data","location","siteMetadata","get","posts","a","createElement","title","name","content","description","property","url","className","map","post","node","path","key","frontmatter","to","date","dangerouslySetInnerHTML","__html","excerpt","propTypes","PropTypes","object"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAAO,EAAAG,GAAAE,EAAAZ,EAAA,KAAAa,EAAAb,EAAAO,EAAAK,GAAAE,EAAAd,EAAA,GAAAe,EAAAf,EAAAO,EAAAO,GAAAE,EAAAhB,EAAA,KASMiB,EAAY,SAAAC,GAAwB,IAArBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,SACnBC,EAAeC,IAAIH,EAAM,qBACzBI,EAAQD,IAAIH,EAAM,2BAExB,OACEb,EAAAkB,EAAAC,cAACT,EAAA,EAAD,CAAQI,SAAUA,GAChBd,EAAAkB,EAAAC,cAACZ,EAAAW,EAAD,CAAQE,MAAK,WAAaL,EAAaK,OACrCpB,EAAAkB,EAAAC,cAAA,QAAME,KAAK,cAAcC,QAASP,EAAaQ,cAC/CvB,EAAAkB,EAAAC,cAAA,QAAMK,SAAS,WAAWF,QAASP,EAAaK,QAChDpB,EAAAkB,EAAAC,cAAA,QAAME,KAAK,iBAAiBC,QAASP,EAAaQ,cAClDvB,EAAAkB,EAAAC,cAAA,QAAMK,SAAS,SAASF,QAASP,EAAaU,MAC9CzB,EAAAkB,EAAAC,cAAA,QACEK,SAAS,WACTF,QAAQ,+EAEVtB,EAAAkB,EAAAC,cAAA,QACEE,KAAK,gBACLC,QAAQ,+EAEVtB,EAAAkB,EAAAC,cAAA,QAAME,KAAK,oBAAoBC,QAASP,EAAaK,SAEvDpB,EAAAkB,EAAAC,cAAA,MAAIO,UAAU,YAAd,SACCT,EAAMU,IAAI,SAAAC,GACT,GAAuB,UAAnBA,EAAKC,KAAKC,KAAkB,CAC9B,IAAMV,EAAQJ,IAAIY,EAAM,2BAA6BA,EAAKC,KAAKC,KAC/D,OACE9B,EAAAkB,EAAAC,cAAA,OAAKY,IAAKH,EAAKC,KAAKG,YAAYF,MAC9B9B,EAAAkB,EAAAC,cAAA,MAAIO,UAAU,UACZ1B,EAAAkB,EAAAC,cAAChB,EAAAe,EAAD,CAAMe,GAAIL,EAAKC,KAAKG,YAAYF,MAAOV,IAEzCpB,EAAAkB,EAAAC,cAAA,aAAQS,EAAKC,KAAKG,YAAYE,MAC9BlC,EAAAkB,EAAAC,cAAA,KAAGgB,wBAAyB,CAAEC,OAAQR,EAAKC,KAAKQ,YAItD,OAAO,MAMf1B,EAAU2B,UAAY,CACpBzB,KAAM0B,IAAUC,OAChB1B,SAAUyB,IAAUC,QAGP7B,YAER,IAAMb,EAAS","file":"component---src-pages-index-js-403587846f6951e6c333.js","sourcesContent":["import React from 'react'\nimport Link from 'gatsby-link'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\n\nconst BlogIndex = ({ data, location }) => {\n  const siteMetadata = get(data, 'site.siteMetadata')\n  const posts = get(data, 'allMarkdownRemark.edges')\n\n  return (\n    <Layout location={location}>\n      <Helmet title={`Posts | ${siteMetadata.title}`}>\n        <meta name=\"description\" content={siteMetadata.description} />\n        <meta property=\"og:title\" content={siteMetadata.title} />\n        <meta name=\"og:description\" content={siteMetadata.description} />\n        <meta property=\"og:url\" content={siteMetadata.url} />\n        <meta\n          property=\"og:image\"\n          content=\"https://s3-us-west-2.amazonaws.com/russelljanderson-dev/static/sitecap.jpg\"\n        />\n        <meta\n          name=\"twitter:image\"\n          content=\"https://s3-us-west-2.amazonaws.com/russelljanderson-dev/static/sitecap.jpg\"\n        />\n        <meta name=\"twitter:image:alt\" content={siteMetadata.title} />\n      </Helmet>\n      <h2 className=\"subtitle\">Posts</h2>\n      {posts.map(post => {\n        if (post.node.path !== '/404/') {\n          const title = get(post, 'node.frontmatter.title') || post.node.path\n          return (\n            <div key={post.node.frontmatter.path}>\n              <h3 className=\"status\">\n                <Link to={post.node.frontmatter.path}>{title}</Link>\n              </h3>\n              <small>{post.node.frontmatter.date}</small>\n              <p dangerouslySetInnerHTML={{ __html: post.node.excerpt }} />\n            </div>\n          )\n        }\n        return false\n      })}\n    </Layout>\n  )\n}\n\nBlogIndex.propTypes = {\n  data: PropTypes.object,\n  location: PropTypes.object,\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n        url\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          frontmatter {\n            path\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}